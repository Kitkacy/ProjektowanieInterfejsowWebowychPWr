rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Books collection - anyone can read, but write requires authentication and ownership
    function isAuthenticated() {
      return request.auth != null;
    }
    match /books/{bookId} {
      allow read: if true;
      // Allow create if user is authenticated and sets themselves as owner
      allow create: if isAuthenticated() && request.resource.data.ownerId == request.auth.uid;
      // Allow update and delete only if the user is the owner
      allow update, delete: if isAuthenticated() && resource.data.ownerId == request.auth.uid;
    }

    // Favorites collection - users can only manage their own favorites
    match /favorites/{favoriteId} {
      allow read, update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }

    // Default rule - deny access to other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
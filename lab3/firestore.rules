rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Check if the user is the owner of the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Books collection - anyone can read, but write requires authentication
    match /books/{bookId} {
      allow read: if true;
      
      // Allow create if user is authenticated and sets themselves as owner
      allow create: if isAuthenticated() && 
                    request.resource.data.ownerId == request.auth.uid;
      
      // Allow update and delete only if the user is the owner
      allow update, delete: if isAuthenticated() && 
                            resource.data.ownerId == request.auth.uid;
    }
    
    // User profiles - secure per user
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }

    // Default rule - deny access to other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}